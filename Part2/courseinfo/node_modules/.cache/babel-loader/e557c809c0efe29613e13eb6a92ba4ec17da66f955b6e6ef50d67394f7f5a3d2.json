{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fullstack open projects\\\\Fullstack-Open\\\\Part2\\\\courseinfo\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Course = props => {\n  const Header = props => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"header\", console.log(props.courses.courses[0].name)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n  /*\n  const Content = (props) => (\n    <div>\n      {props.course.course.parts.map(part => \n        <p key={part.id} >\n          {part.name} {part.exercises}\n        </p>\n      )}\n    </div>\n  )\n   const Total = (parts) => {\n    const sum = parts.parts.reduce(\n      (accumulator, currentValue) => accumulator + currentValue.exercises,\n      0,\n    )\n    return (\n      <b>total of {sum} exercises</b>\n    )\n  }\n        <Content course={props.courses} />\n        <Total parts={props.courses.course.parts} />\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      courses: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = Course;\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(Course, {\n    courses: courses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 10\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Course\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Course","props","Header","_jsxDEV","children","console","log","courses","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","id","parts","exercises","_c2","$RefreshReg$"],"sources":["C:/Fullstack open projects/Fullstack-Open/Part2/courseinfo/src/App.js"],"sourcesContent":["const Course = (props) => {\n  const Header = (props) => (\n    <div>\n    <h1>\n      header\n      {console.log(props.courses.courses[0].name)}\n    </h1>\n    </div>\n  )\n  /*\n  const Content = (props) => (\n    <div>\n      {props.course.course.parts.map(part => \n        <p key={part.id} >\n          {part.name} {part.exercises}\n        </p>\n      )}\n    </div>\n  )\n\n  const Total = (parts) => {\n    const sum = parts.parts.reduce(\n      (accumulator, currentValue) => accumulator + currentValue.exercises,\n      0,\n    )\n    return (\n      <b>total of {sum} exercises</b>\n    )\n  }\n        <Content course={props.courses} />\n        <Total parts={props.courses.course.parts} />\n  */\n  return (\n    <div>\n      <Header courses={props} />\n    </div>\n  )\n}\n\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    }, \n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  return <Course courses={courses} />\n} \n\nexport default App"],"mappings":";;AAAA,MAAMA,MAAM,GAAIC,KAAK,IAAK;EACxB,MAAMC,MAAM,GAAID,KAAK,iBACnBE,OAAA;IAAAC,QAAA,eACAD,OAAA;MAAAC,QAAA,GAAI,QAEF,EAACC,OAAO,CAACC,GAAG,CAACL,KAAK,CAACM,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CACN;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,oBACET,OAAA;IAAAC,QAAA,eACED,OAAA,CAACD,MAAM;MAACK,OAAO,EAAEN;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAAAC,EAAA,GArCKb,MAAM;AAuCZ,MAAMc,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMP,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,oCAAoC;IAC1CO,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,CACL;MACER,IAAI,EAAE,uBAAuB;MAC7BS,SAAS,EAAE,EAAE;MACbF,EAAE,EAAE;IACN,CAAC,EACD;MACEP,IAAI,EAAE,0BAA0B;MAChCS,SAAS,EAAE,CAAC;MACZF,EAAE,EAAE;IACN,CAAC,EACD;MACEP,IAAI,EAAE,sBAAsB;MAC5BS,SAAS,EAAE,EAAE;MACbF,EAAE,EAAE;IACN,CAAC,EACD;MACEP,IAAI,EAAE,OAAO;MACbS,SAAS,EAAE,EAAE;MACbF,EAAE,EAAE;IACN,CAAC;EAEL,CAAC,EACD;IACEP,IAAI,EAAE,SAAS;IACfO,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,CACL;MACER,IAAI,EAAE,SAAS;MACfS,SAAS,EAAE,CAAC;MACZF,EAAE,EAAE;IACN,CAAC,EACD;MACEP,IAAI,EAAE,aAAa;MACnBS,SAAS,EAAE,CAAC;MACZF,EAAE,EAAE;IACN,CAAC;EAEL,CAAC,CACF;EAED,oBAAOZ,OAAA,CAACH,MAAM;IAACO,OAAO,EAAEA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC,CAAC;AAAAM,GAAA,GA/CKJ,GAAG;AAiDT,eAAeA,GAAG;AAAA,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}